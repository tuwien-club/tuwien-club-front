{"version":3,"sources":["common/logo.svg","components/legacy/Animation/Animation.js","components/legacy/Mask/Mask.js","components/legacy/Waves/Waves.js","components/legacy/View/View.js","components/legacy/Collapse/Collapse.js","components/legacy/Navbar/Navbar.js","components/legacy/Navbar/NavbarNav/NavbarNav.js","components/legacy/Navbar/NavbarToggler/NavbarToggler.js","components/legacy/Navbar/NavItem/NavItem.js","components/molecules/Navbar/index.tsx","components/organisms/NavbarHeader/index.tsx","components/organisms/Footer/index.tsx","tuwien_club/pages/Contact/index.tsx","tuwien_club/pages/Faq/index.tsx","components/blocks/GroupsCard.tsx","components/blocks/StudyCard.tsx","tuwien_club/pages/Study/index.tsx","tuwien_club/pages/Groups/index.tsx","tuwien_club/pages/Howto/index.tsx","tuwien_club/pages/Rules/index.tsx","tuwien_club/pages/Home/index.tsx","App.tsx","store/actions/counter.ts","store/reducers/counter.ts","store/index.ts","index.tsx"],"names":["Animation","state","isVisible","revealed","countIterations","elemRef","React","createRef","updatePredicate","windowHeight","window","innerHeight","scroll","scrollY","docHeight","document","documentElement","offsetHeight","currentRef","current","getOffset","clientHeight","setState","handleStart","onAnimationStart","props","handleIteration","onAnimationIteration","handleEnd","onAnimationEnd","count","elem","box","getBoundingClientRect","body","docEl","scrollTop","pageYOffset","clientTop","top","Math","round","reveal","this","addEventListener","removeEventListener","children","className","delay","duration","infinite","style","Tag","tag","type","attributes","styleObject","animationDuration","animationDelay","animationIterationCount","visibility","animationName","getAllStyles","Object","assign","classes","classNames","ref","Component","defaultProps","Mask","overlay","pattern","Waves","animate","width","height","left","cursorPos","wavesRef","prevProps","prevState","time","replying","$button","parentNode","buttonPos","buttonWidth","offsetWidth","buttonHeight","rippleWidthShouldBe","max","centralized","outline","flat","dark","View","useState","setCursorPos","handleClick","e","clientY","clientX","Date","now","cascade","fixed","hover","rounded","src","waves","zoom","viewStyle","backgroundAttachment","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","onMouseDown","onTouchStart","SHOW","SHOWN","HIDE","HIDDEN","DEFAULT_DELAYS","show","hide","Collapse","id","collapse","element","setTransitionTag","callback","delayType","transitionTag","setTimeout","getDelay","openCollapse","onOpened","getHeight","closeCollapse","onClosed","isOpen","willOpen","clearTimeout","key","isNaN","scrollHeight","collapseClass","navbar","c","Navbar","isCollapsed","handleScroll","scrollingNavbarOffset","scrolling","expand","light","sticky","color","double","transparent","getExpandClass","role","NavbarNav","right","NavbarToggler","image","NavItem","active","text","logoUrl","Logo","logoAlt","activePath","location","pathname","showNavbar","setShowNavbar","history","useHistory","navHandler","path","push","onClick","alt","loading","icon","size","NavbarHeader","Footer","copyrightText","copyrightUrl","getFullYear","href","ContactPage","name","PageType","ChildPages","FaqPage","GroupsCardBlock","fieldOptions","streamFieldWidth","blocks","prepareBlocks","showShow","setShowShow","fixedSlug","outerElement","renderItem","item","navigate","title","BlockType","BlockFields","EditableField","RichTextField","StudyCardBlock","StudyPage","linkHandler","fluid","split","reverseOrder","GroupsPage","HowtoPage","RulesPage","HomePage","App","settings","gitRemote","process","pages","increase","createAction","decrease","counterReducer","createReducer","counter","_action","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","devTools","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.045b5d55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3ec847c7.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n//> CSS\nimport \"./_animations.scss\";\n\nclass Animation extends Component {\n  state = {\n    isVisible: false,\n    revealed: false,\n    countIterations: 0\n  };\n\n  elemRef = React.createRef();\n\n  componentDidMount() {\n    const { reveal } = this.props;\n\n    this.setState({\n      isVisible: !reveal,\n      revealed: !reveal\n    });\n\n    if (reveal) {\n      window.addEventListener('scroll', this.updatePredicate);\n      this.updatePredicate();\n    }\n  }\n\n  componentWillUnmount() {\n    const { reveal } = this.props;\n\n    if (reveal) {\n      window.removeEventListener('scroll', this.updatePredicate);\n    }\n  }\n\n  updatePredicate = () => {\n    const windowHeight = window.innerHeight;\n    const scroll = window.scrollY;\n    const docHeight = document.documentElement.offsetHeight;\n    const { revealed } = this.state;\n    const currentRef = this.elemRef.current;\n\n    if (\n      (windowHeight + scroll - 100 > this.getOffset(currentRef) && scroll < this.getOffset(currentRef)) ||\n      (windowHeight + scroll - 100 > this.getOffset(currentRef) + currentRef.clientHeight &&\n        scroll < this.getOffset(currentRef) + currentRef.clientHeight) ||\n      (windowHeight + scroll === docHeight && this.getOffset(currentRef) + 100 > docHeight)\n    ) {\n      this.setState({\n        isVisible: true,\n        revealed: true\n      });\n    } else if (!revealed) {\n      this.setState({\n        isVisible: false,\n        revealed: true\n      });\n    }\n  };\n\n  handleStart = () => {\n    const { onAnimationStart } = this.props;\n    const { countIterations } = this.state;\n\n    this.setState({\n      countIterations: countIterations + 1\n    });\n    if (onAnimationStart) {\n      onAnimationStart();\n    }\n  };\n\n  handleIteration = () => {\n    const { onAnimationIteration } = this.props;\n    const { countIterations } = this.state;\n\n    if (onAnimationIteration) {\n      this.setState({\n        countIterations: countIterations + 1\n      });\n      onAnimationIteration();\n    }\n  };\n\n  handleEnd = () => {\n    const { onAnimationEnd, count } = this.props;\n    const { countIterations } = this.state;\n\n    this.setState({\n      countIterations: countIterations + 1\n    });\n    if (onAnimationEnd && count === countIterations) {\n      onAnimationEnd();\n    }\n  };\n\n  getOffset = elem => {\n    const box = elem.getBoundingClientRect();\n    const { body } = document;\n    const docEl = document.documentElement;\n    const scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    const clientTop = docEl.clientTop || body.clientTop || 0;\n    const top = box.top + scrollTop - clientTop;\n    return Math.round(top);\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      count,\n      delay,\n      duration,\n      infinite,\n      reveal,\n      style,\n      tag: Tag,\n      type,\n      ...attributes\n    } = this.props;\n\n    const { isVisible, revealed } = this.state;\n\n    const styleObject = {\n      animationDuration: duration,\n      animationDelay: delay,\n      animationIterationCount: infinite ? false : count,\n      visibility: isVisible ? 'visible' : 'hidden',\n      animationName: type\n    };\n\n    const hiddenStyles = {\n      animationName: 'none',\n      visibility: 'hidden'\n    };\n\n    const getAllStyles = Object.assign(styleObject, style);\n\n    const classes = classNames(isVisible && 'animated', type && type, infinite && 'infinite', className);\n\n    return (\n      <Tag\n        data-test='animation'\n        className={classes}\n        onAnimationEnd={this.handleEnd}\n        onAnimationIteration={this.handleIteration}\n        onAnimationStart={this.handleStart}\n        ref={this.elemRef}\n        style={isVisible && revealed ? getAllStyles : hiddenStyles}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...attributes}\n      >\n        {children}\n      </Tag>\n    );\n  }\n}\n\nAnimation.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  className: PropTypes.string,\n  count: PropTypes.number,\n  delay: PropTypes.string,\n  duration: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  infinite: PropTypes.bool,\n  onAnimationEnd: PropTypes.func,\n  onAnimationIteration: PropTypes.func,\n  onAnimationStart: PropTypes.func,\n  reveal: PropTypes.bool,\n  style: PropTypes.node,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  type: PropTypes.string\n};\n\nAnimation.defaultProps = {\n  tag: 'div',\n  reveal: false,\n  duration: 1,\n  count: 1\n};\n\nexport default Animation;\nexport { Animation as MDBAnimation };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n//> CSS\nimport \"./_masks.scss\";\n\nconst Mask = props => {\n  const { children, className, overlay, pattern, tag: Tag, ...attributes } = props;\n\n  const classes = classNames('mask', pattern && `pattern-${pattern}`, overlay && `rgba-${overlay}`, className);\n  return (\n    <Tag data-test='mask' {...attributes} className={classes}>\n      {children}\n    </Tag>\n  );\n};\n\nMask.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  overlay: PropTypes.string,\n  pattern: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  tag: PropTypes.string\n};\n\nMask.defaultProps = {\n  className: '',\n  overlay: '',\n  pattern: '',\n  tag: 'div'\n};\n\nexport default Mask;\nexport { Mask as MDBMask };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Waves.css';\n\nclass Waves extends React.Component {\n  state = {\n    animate: false,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    cursorPos: this.props.cursorPos\n  };\n\n  wavesRef = React.createRef();\n\n  componentDidUpdate(prevProps, prevState) {\n    const { cursorPos } = this.props;\n    if (prevState.cursorPos.time !== cursorPos.time) {\n      if (prevState.animate) {\n        this.setState({ animate: false, cursorPos }, () => {\n          this.replying();\n        });\n      } else {\n        this.replying();\n      }\n    }\n  }\n\n  replying() {\n    const $ripple = this.wavesRef.current;\n    const $button = $ripple.parentNode;\n    const buttonPos = $button.getBoundingClientRect();\n    const buttonWidth = $button.offsetWidth;\n    const buttonHeight = $button.offsetHeight;\n    const rippleWidthShouldBe = Math.max(buttonHeight, buttonWidth);\n    const centralized = rippleWidthShouldBe / 2;\n    const { cursorPos } = this.state;\n    this.setState({\n      animate: true,\n      width: rippleWidthShouldBe,\n      height: rippleWidthShouldBe,\n      top: cursorPos.top - buttonPos.top - centralized,\n      left: cursorPos.left - buttonPos.left - centralized\n    });\n  }\n\n  render() {\n    const { outline, flat, dark } = this.props;\n    const { animate, top, left, width, height } = this.state;\n    return (\n      <div\n        data-test='waves'\n        className={`Ripple ${outline || flat || dark ? 'Ripple-outline ' : ''}${animate ? 'is-reppling' : ''}`}\n        style={{\n          top: `${top}px`,\n          left: `${left}px`,\n          width: `${width}px`,\n          height: `${height}px`\n        }}\n        ref={this.wavesRef}\n      />\n    );\n  }\n}\n\nWaves.propTypes = {\n  animate: PropTypes.bool,\n  children: PropTypes.node,\n  cursorPos: PropTypes.object,\n  dark: PropTypes.bool,\n  flat: PropTypes.bool,\n  outline: PropTypes.bool\n};\n\nexport default Waves;\nexport { Waves as MDBWaves };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Waves from '../Waves';\n\nconst View = props => {\n  const [cursorPos, setCursorPos] = useState({});\n\n  const handleClick = e => {\n    const cursorPos = {\n      top: e.clientY,\n      left: e.clientX,\n      time: Date.now()\n    };\n    setCursorPos(cursorPos);\n  };\n\n  const { cascade, children, className, fixed, hover, rounded, src, tag: Tag, waves, zoom, ...attributes } = props;\n\n  const classes = classNames(\n    'view',\n    cascade && 'view-cascade',\n    className,\n    hover && 'overlay',\n    rounded && 'rounded',\n    waves ? 'Ripple-parent' : false,\n    zoom && 'zoom'\n  );\n\n  const viewStyle = src\n    ? {\n        backgroundAttachment: fixed ? 'fixed' : null,\n        backgroundImage: `url(\"${src}\")`,\n        backgroundPosition: 'center center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        height: '100vh'\n      }\n    : {};\n\n  return (\n    <Tag\n      {...attributes}\n      className={classes}\n      data-test='view'\n      onMouseDown={handleClick}\n      onTouchStart={handleClick}\n      style={viewStyle}\n    >\n      {children}\n      {waves && <Waves cursorPos={cursorPos} />}\n    </Tag>\n  );\n};\n\nView.defaultProps = {\n  cascade: false,\n  className: '',\n  hover: false,\n  rounded: false,\n  src: '',\n  tag: 'div',\n  waves: false,\n  zoom: false\n};\n\nView.propTypes = {\n  cascade: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  fixed: PropTypes.bool,\n  hover: PropTypes.bool,\n  rounded: PropTypes.bool,\n  src: PropTypes.string,\n  tag: PropTypes.string,\n  waves: PropTypes.bool,\n  zoom: PropTypes.bool\n};\n\nexport default View;\nexport { View as MDBView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SHOW = 'SHOW';\nconst SHOWN = 'SHOWN';\nconst HIDE = 'HIDE';\nconst HIDDEN = 'HIDDEN';\n\nconst DEFAULT_DELAYS = {\n  show: 350,\n  hide: 350\n};\n\nclass Collapse extends Component {\n  state = {\n    id: this.props.id,\n    collapse: HIDDEN,\n    height: null\n  };\n\n  element = null;\n\n  componentDidMount() {\n    const { isOpen } = this.props;\n    const { collapse, id } = this.state;\n\n    if ((isOpen === id || isOpen === true) && collapse === HIDDEN) {\n      this.openCollapse();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isOpen } = this.props;\n    const { collapse } = this.state;\n\n    const willOpen = typeof isOpen !== 'boolean' ? isOpen === prevState.id : isOpen;\n\n    if (willOpen && collapse === HIDDEN) {\n      this.openCollapse();\n    } else if (!willOpen && prevState.collapse === SHOWN) {\n      this.closeCollapse();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.transitionTag);\n  }\n\n  setTransitionTag = (collapse, callback, delayType) => {\n    this.transitionTag = setTimeout(() => {\n      this.setState(\n        {\n          collapse,\n          height: null\n        },\n        callback()\n      );\n    }, this.getDelay(delayType));\n  };\n\n  openCollapse = () => {\n    const { onOpened } = this.props;\n\n    this.setState({ collapse: SHOW }, () => {\n      this.setState({ height: this.getHeight() });\n      this.setTransitionTag(SHOWN, onOpened, 'show');\n    });\n  };\n\n  closeCollapse = () => {\n    const { onClosed } = this.props;\n    this.setState({ height: this.getHeight() }, () => {\n      this.setState(\n        {\n          collapse: HIDE,\n          height: this.getHeight()\n        },\n        () => {\n          this.setState({ height: 0 });\n        }\n      );\n    });\n\n    this.setTransitionTag(HIDDEN, onClosed, 'hide');\n  };\n\n  getDelay(key) {\n    const { delay } = this.props;\n    if (typeof delay === 'object') {\n      return isNaN(delay[key]) ? DEFAULT_DELAYS[key] : delay[key];\n    }\n    return delay;\n  }\n\n  getHeight() {\n    return this.element.scrollHeight;\n  }\n\n  render() {\n    const { navbar, children, className, isOpen, delay, onOpened, onClosed, ...attributes } = this.props;\n\n    const { collapse, height } = this.state;\n    let collapseClass;\n    switch (collapse) {\n      case SHOW:\n        collapseClass = 'collapsing';\n        break;\n      case SHOWN:\n        collapseClass = 'collapse show';\n        break;\n      case HIDE:\n        collapseClass = 'collapsing';\n        break;\n      case HIDDEN:\n        collapseClass = 'collapse';\n        break;\n      default:\n        // HIDDEN\n        collapseClass = 'collapse';\n    }\n\n    const classes = classNames(collapseClass, navbar ? 'navbar-collapse' : false, className);\n\n    const style = height === null ? null : { height };\n\n    return (\n      <div\n        data-test='collapse'\n        {...attributes}\n        style={{ ...attributes.style, ...style }}\n        className={classes}\n        ref={c => {\n          this.element = c;\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nCollapse.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.node,\n  delay: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({ hide: PropTypes.number, show: PropTypes.number })]),\n  id: PropTypes.string,\n  isOpen: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  navbar: PropTypes.bool,\n  onClosed: PropTypes.func,\n  onOpened: PropTypes.func\n};\n\nCollapse.defaultProps = {\n  isOpen: '',\n  delay: DEFAULT_DELAYS,\n  onOpened: () => {},\n  onClosed: () => {}\n};\nexport default Collapse;\nexport { Collapse as MDBCollapse };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n//> CSS\nimport \"./_navbars.scss\";\n\nconst getExpandClass = expand => {\n  if (expand === false) {\n    return false;\n  }\n  if (expand === true || expand === 'xs') {\n    return 'navbar-expand';\n  }\n\n  return `navbar-expand-${expand}`;\n};\n\nclass Navbar extends Component {\n  state = {\n    isCollapsed: false\n  };\n\n  handleScroll = () => {\n    const scrollingNavbarOffset = this.props.scrollingNavbarOffset || 50;\n    if (window.pageYOffset > scrollingNavbarOffset) {\n      this.setState({ isCollapsed: true });\n    } else {\n      this.setState({ isCollapsed: false });\n    }\n  };\n\n  componentDidMount() {\n    const { scrolling, scrollingNavbarOffset } = this.props;\n    if (scrolling || scrollingNavbarOffset) {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scrolling, scrollingNavbarOffset } = this.props;\n\n    if (scrolling || scrollingNavbarOffset) {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n  }\n\n  render() {\n    const {\n      expand,\n      light,\n      dark,\n      sticky,\n      fixed,\n      scrolling,\n      color,\n      className,\n      scrollingNavbarOffset,\n      tag: Tag,\n      double,\n      transparent,\n      ...attributes\n    } = this.props;\n\n    const { isCollapsed } = this.state;\n\n    const classes = classNames(\n      {\n        'navbar-light': light,\n        'navbar-dark': dark,\n        [`sticky-${sticky}`]: sticky,\n        [`fixed-${fixed}`]: fixed,\n        'scrolling-navbar': scrolling || scrollingNavbarOffset,\n        'double-nav': double,\n        'top-nav-collapse': isCollapsed,\n        [`${color}`]: color && transparent ? isCollapsed : color\n      },\n      'navbar',\n      getExpandClass(expand),\n      className\n    );\n\n    return <Tag data-test='navbar' {...attributes} className={classes} role='navigation' />;\n  }\n}\n\nNavbar.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  dark: PropTypes.bool,\n  double: PropTypes.bool,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  fixed: PropTypes.string,\n  light: PropTypes.bool,\n  scrolling: PropTypes.bool,\n  scrollingNavbarOffset: PropTypes.number,\n  sticky: PropTypes.string,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transparent: PropTypes.bool\n};\n\nNavbar.defaultProps = {\n  tag: 'nav',\n  expand: false,\n  scrolling: false\n};\n\nexport default Navbar;\nexport { Navbar as MDBNavbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst NavbarNav = props => {\n  const { children, className, right, left, tag: Tag, ...attributes } = props;\n\n  const classes = classNames(\n    'navbar-nav',\n    right ? 'ml-auto' : left ? 'mr-auto' : 'justify-content-around w-100',\n    className\n  );\n\n  return (\n    <Tag data-test='navbar-nav' {...attributes} className={classes}>\n      {children}\n    </Tag>\n  );\n};\n\nNavbarNav.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  left: PropTypes.bool,\n  right: PropTypes.bool,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\n\nNavbarNav.defaultProps = {\n  tag: 'ul'\n};\n\nexport default NavbarNav;\nexport { NavbarNav as MDBNavbarNav };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst NavbarToggler = props => {\n  const { right, left, children, className, tag: Tag, image, ...attributes } = props;\n\n  const classes = classNames(\n    {\n      'navbar-toggler-right': right,\n      'navbar-toggler-left': left\n    },\n    'navbar-toggler',\n    className\n  );\n\n  return (\n    <Tag data-test='navbar-toggler' {...attributes} className={classes}>\n      {children ||\n        (image ? (\n          <span className='navbar-toggler-icon' style={{ backgroundImage: `url(\"${image}\")` }} />\n        ) : (\n          <span className='navbar-toggler-icon' />\n        ))}\n    </Tag>\n  );\n};\n\nNavbarToggler.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  image: PropTypes.string,\n  left: PropTypes.bool,\n  right: PropTypes.bool,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  type: PropTypes.string\n};\n\nNavbarToggler.defaultProps = {\n  tag: 'button',\n  type: 'button'\n};\n\nexport default NavbarToggler;\nexport { NavbarToggler as MDBNavbarToggler };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst NavItem = props => {\n  const { children, className, active, text, tag: Tag, ...attributes } = props;\n\n  const classes = classNames('nav-item', active && 'active', text && 'navbar-text', className);\n\n  return (\n    <Tag data-test='nav-item' {...attributes} className={classes}>\n      {children}\n    </Tag>\n  );\n};\n\nNavItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\n\nNavItem.defaultProps = {\n  tag: 'li'\n};\n\nexport default NavItem;\nexport { NavItem as MDBNavItem };\n","import {\n  MDBContainer,\n  MDBNavbarBrand,\n  MDBNavbarToggler,\n  MDBIcon,\n  MDBNavbarNav,\n  MDBNavbarItem,\n  MDBNavbarLink\n} from 'mdb-react-ui-kit'\nimport {useState} from 'react'\nimport {useHistory} from 'react-router'\n\nimport Logo from '~/common/logo.svg'\n\nimport {MDBNavbar, MDBCollapse} from '~/components/legacy'\n\nimport './index.scss'\n\ninterface Props {\n  logoUrl?: string\n  logoAlt?: string\n  showMenu?: boolean\n}\n\nconst Navbar = ({\n  logoUrl = Logo,\n  logoAlt = 'tuwien club'\n}: Props): JSX.Element => {\n  const activePath = window.location.pathname\n  const [showNavbar, setShowNavbar] = useState(false)\n\n  const history = useHistory()\n  //const cmsContext = useCMSContext()\n  //const pageContext = useCMSPageContext()\n\n  // const getKeyFromSlug = (slug: string) => {\n  //   const refs = cmsContext.keyRefs?.indexKey\n\n  //   return Object.keys(pickBy(refs, page => page.slug === slug))[0] || ''\n  // }\n\n  const navHandler = (\n    path: string /*position: string, offset: number*/\n  ): void => {\n    setShowNavbar(false)\n    history.push(path)\n    //scroller.scrollTo(position, offset)\n  }\n\n  return (\n    <>\n      <MDBNavbar className=\"navbar-main\" expand=\"lg\" dark>\n        <MDBContainer>\n          <MDBNavbarBrand\n            aria-current=\"page\"\n            onClick={() => navHandler('/' /*\"about\", 300*/)}>\n            <img\n              className=\"nav-logo\"\n              src={logoUrl}\n              alt={logoAlt}\n              loading=\"lazy\"\n            />\n          </MDBNavbarBrand>\n\n          <MDBNavbarToggler\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n            onClick={() => setShowNavbar(!showNavbar)}>\n            <MDBIcon icon=\"bars\" size=\"lg\" />\n          </MDBNavbarToggler>\n\n          <MDBCollapse isOpen={showNavbar} navbar>\n            <MDBNavbarNav className=\"me-auto mb-2 mb-lg-0\">\n              <MDBNavbarItem className=\"ms-3 font-weight-bold text-uppercase\">\n                <MDBNavbarLink\n                  aria-current=\"page\"\n                  active={activePath === '/'}\n                  onClick={() => navHandler('/' /*\"about\", 300*/)}>\n                  Home\n                </MDBNavbarLink>\n              </MDBNavbarItem>\n\n              <MDBNavbarItem className=\"ms-3 font-weight-bold text-uppercase\">\n                <MDBNavbarLink\n                  active={activePath === '/groups'}\n                  onClick={() => navHandler('/groups' /*\"about\", 300*/)}>\n                  Gruppen\n                </MDBNavbarLink>\n              </MDBNavbarItem>\n\n              <MDBNavbarItem className=\"ms-3 font-weight-bold text-uppercase\">\n                <MDBNavbarLink\n                  active={activePath === '/faq'}\n                  onClick={() => navHandler('/faq' /*\"about\", 300*/)}>\n                  FAQ\n                </MDBNavbarLink>\n              </MDBNavbarItem>\n\n              <MDBNavbarItem className=\"ms-3 font-weight-bold text-uppercase\">\n                <MDBNavbarLink\n                  active={activePath === '/rules'}\n                  onClick={() => navHandler('/rules' /*\"about\", 300*/)}>\n                  Regeln\n                </MDBNavbarLink>\n              </MDBNavbarItem>\n\n              <MDBNavbarItem className=\"ms-3 font-weight-bold text-uppercase\">\n                <MDBNavbarLink\n                  active={activePath === '/contact'}\n                  onClick={() => navHandler('/contact' /*\"about\", 300*/)}>\n                  Kontakt\n                </MDBNavbarLink>\n              </MDBNavbarItem>\n\n              <MDBNavbarItem className=\"ms-3 font-weight-bold text-uppercase\">\n                <MDBNavbarLink\n                  active={activePath === '/howto'}\n                  onClick={() => navHandler('/howto' /*\"about\", 300*/)}>\n                  How-To\n                </MDBNavbarLink>\n              </MDBNavbarItem>\n            </MDBNavbarNav>\n            {/* <form className='d-flex input-group w-auto'>\n              <input type='search' className='form-control' placeholder='Type query' aria-label='Search' />\n              <MDBBtn color='primary'>Search</MDBBtn>\n            </form> */}\n          </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n    </>\n  )\n}\n\nexport default Navbar\n","import {Navbar} from '~/components/molecules'\n\nimport './index.scss'\n\nconst NavbarHeader = (): JSX.Element => {\n  return (\n    <header>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default NavbarHeader\n","import {MDBFooter} from 'mdb-react-ui-kit'\n\n// import React from 'react'\nimport './index.scss'\n\ninterface Props {\n  copyrightText: string\n  copyrightUrl: string\n}\n\nconst Footer = ({copyrightText, copyrightUrl}: Props): JSX.Element => {\n  return (\n    <MDBFooter className=\"page-footer\">\n      <div className=\"footer-copyright text-center py-2\">\n        &copy; {new Date().getFullYear()} Copyright:{' '}\n        <a className=\"text-white\" href={copyrightUrl}>\n          {copyrightText}\n        </a>\n      </div>\n    </MDBFooter>\n  )\n}\n\nexport default Footer\n","import {\n  ConnectedPageType,\n  SimpleRichTextField as RichTextField\n} from '@snek-at/jaen'\nimport {MDBContainer} from 'mdb-react-ui-kit'\n\nimport {NavbarHeader, Footer} from '~/components/organisms'\n\nimport './index.scss'\n\nconst ContactPage: ConnectedPageType = () => {\n  return (\n    <>\n      <NavbarHeader />\n      <MDBContainer className=\"pt-5\">\n        <div>\n          <RichTextField name={'contactsubheading'} />\n        </div>\n      </MDBContainer>\n      <Footer copyrightText={'CC'} copyrightUrl={'mailto:admin@tuwien.club'} />\n    </>\n  )\n}\n\nContactPage.PageType = 'ContactPage'\nContactPage.ChildPages = []\n\nexport default ContactPage\n","import {\n  ConnectedPageType,\n  SimpleTextField as TextField,\n  SimpleRichTextField as RichTextField\n} from '@snek-at/jaen'\nimport {MDBContainer} from 'mdb-react-ui-kit'\n\nimport {NavbarHeader, Footer} from '~/components/organisms'\n\nimport './index.scss'\n\nconst FaqPage: ConnectedPageType = () => {\n  return (\n    <>\n      <NavbarHeader />\n      <MDBContainer className=\"pt-5\">\n        <h1>\n          <TextField name={'faqheading'} />\n        </h1>\n        <div>\n          <RichTextField name={'faqsubheading'} />\n        </div>\n      </MDBContainer>\n      <Footer copyrightText={'CC'} copyrightUrl={'mailto:admin@tuwien.club'} />\n    </>\n  )\n}\n\nFaqPage.PageType = 'FaqPage'\nFaqPage.ChildPages = []\n\nexport default FaqPage\n","import {\n  BC,\n  EditableField,\n  RichTextField,\n  IndexField,\n  prepareBlocks\n} from '@snek-at/jaen'\nimport {\n  MDBIcon,\n  MDBCollapse,\n  MDBCard,\n  MDBCardBody,\n  MDBCardHeader,\n  MDBNavbarLink\n} from 'mdb-react-ui-kit'\nimport {useState} from 'react'\n\ntype GroupsCardBlockFields = {title: string; text: string}\n\nconst GroupsCardBlock: BC<GroupsCardBlockFields> = ({\n  fieldOptions,\n  streamFieldWidth\n}) => {\n  const blocks = prepareBlocks<GroupsCardBlockFields>(\n    GroupsCardBlock,\n    fieldOptions\n  )\n  const [showShow, setShowShow] = useState('collapse0')\n\n  const index = 1\n  // const studies = pageContent.studies.reduce((s: any, t: any) => {\n  //   s[t.study.studyType] = [...(s[t.study.studyType] || []), t]\n  //   return s\n  // }, {})\n  return (\n    <>\n      <MDBCard\n        style={{width: streamFieldWidth}}\n        className=\"accordion-item mt-3\">\n        <MDBCardHeader\n          className=\"accordion-header d-flex justify-content-between\"\n          onClick={() =>\n            showShow === `collapse${index}`\n              ? setShowShow('collapse')\n              : setShowShow(`collapse${index}`)\n          }>\n          {blocks['title']}\n          <MDBIcon\n            icon={showShow === `collapse${index}` ? 'angle-up' : 'angle-down'}\n          />\n        </MDBCardHeader>\n        <MDBCollapse show={showShow === `collapse${index}`}>\n          <MDBCardBody className=\"accordion-body\">\n            {blocks['text']}\n            <IndexField\n              fixedSlug={'groups'}\n              outerElement={() => <div />}\n              renderItem={(item, key, navigate) => (\n                <p key={key}>\n                  {/* Slug: {item.slug} Title: {item.title}{' '} */}\n                  <MDBNavbarLink aria-current=\"page\" onClick={() => navigate()}>\n                    {item.title}\n                  </MDBNavbarLink>\n                </p>\n              )}\n            />\n          </MDBCardBody>\n        </MDBCollapse>\n      </MDBCard>\n    </>\n  )\n}\n\nGroupsCardBlock.BlockType = 'GroupsCardBlock'\nGroupsCardBlock.BlockFields = {\n  title: EditableField,\n  text: RichTextField\n}\n\nexport default GroupsCardBlock\n","import {BC, EditableField, RichTextField, prepareBlocks} from '@snek-at/jaen'\nimport {\n  MDBIcon,\n  MDBCollapse,\n  MDBCard,\n  MDBCardBody,\n  MDBCardHeader\n} from 'mdb-react-ui-kit'\nimport {useState} from 'react'\n\ntype StudyCardBlockFields = {title: string; text: string}\n\nconst StudyCardBlock: BC<StudyCardBlockFields> = ({\n  fieldOptions,\n  streamFieldWidth\n}) => {\n  const blocks = prepareBlocks<StudyCardBlockFields>(\n    StudyCardBlock,\n    fieldOptions\n  )\n  const [showShow, setShowShow] = useState('collapse0')\n\n  const index = 1\n  // const studies = pageContent.studies.reduce((s: any, t: any) => {\n  //   s[t.study.studyType] = [...(s[t.study.studyType] || []), t]\n  //   return s\n  // }, {})\n  return (\n    <>\n      <MDBCard\n        style={{width: streamFieldWidth}}\n        className=\"accordion-item mt-3\">\n        <MDBCardHeader\n          className=\"accordion-header d-flex justify-content-between\"\n          onClick={() =>\n            showShow === `collapse${index}`\n              ? setShowShow('collapse')\n              : setShowShow(`collapse${index}`)\n          }>\n          {blocks['title']}\n          <MDBIcon\n            icon={showShow === `collapse${index}` ? 'angle-up' : 'angle-down'}\n          />\n        </MDBCardHeader>\n        <MDBCollapse show={showShow === `collapse${index}`}>\n          <MDBCardBody className=\"accordion-body\">{blocks['text']}</MDBCardBody>\n        </MDBCollapse>\n      </MDBCard>\n    </>\n  )\n}\n\nStudyCardBlock.BlockType = 'StudyCardBlock'\nStudyCardBlock.BlockFields = {\n  title: EditableField,\n  text: RichTextField\n}\n\nexport default StudyCardBlock\n","import {\n  ConnectedPageType,\n  StreamField, //SimpleTextField as TextField,\n  SimpleRichTextField as RichTextField\n} from '@snek-at/jaen'\nimport {\n  // MDBIcon,\n  MDBContainer, // MDBCollapse,\n  // MDBCard,\n  // MDBCardBody,\n  // MDBCardHeader,\n  MDBNavbarLink,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem\n} from 'mdb-react-ui-kit'\nimport {useHistory} from 'react-router'\n\nimport {StudyCardBlock} from '~/components/blocks'\n//import {useState} from 'react'\nimport {NavbarHeader, Footer} from '~/components/organisms'\n\nimport './index.scss'\n\nconst StudyPage: ConnectedPageType = () => {\n  //const [showShow, setShowShow] = useState('collapse0')\n  // const studies = pageContent.studies.reduce((s: any, t: any) => {\n  //   s[t.study.studyType] = [...(s[t.study.studyType] || []), t]\n  //   return s\n  // }, {})\n  const activePath = window.location.pathname\n\n  const history = useHistory()\n  const linkHandler = (\n    path: string /*position: string, offset: number*/\n  ): void => {\n    history.push(path)\n    //scroller.scrollTo(position, offset)\n  }\n  return (\n    <>\n      <NavbarHeader />\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <MDBContainer fluid>\n          <MDBBreadcrumb>\n            <MDBBreadcrumbItem>\n              <MDBNavbarLink\n                aria-current=\"page\"\n                onClick={() => linkHandler('/groups')}>\n                {activePath.split('/')[1]}\n              </MDBNavbarLink>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem active>\n              <MDBNavbarLink\n                aria-current=\"page\"\n                onClick={() => linkHandler(activePath)}>\n                {activePath.split('/')[2]}\n              </MDBNavbarLink>\n            </MDBBreadcrumbItem>\n          </MDBBreadcrumb>\n        </MDBContainer>\n      </nav>\n      <MDBContainer className=\"pt-5\">\n        <RichTextField name={'groupsosubheading'} />\n      </MDBContainer>\n      <MDBContainer>\n        <div className=\"accordion\">\n          <StreamField\n            reverseOrder={true}\n            name={`studycards${activePath.split('/')[2]}`}\n            blocks={[StudyCardBlock]}\n          />\n          {/* {Object.keys(studies).map((studytype: any, index: number) => (\n            <>\n              <MDBCard className=\"accordion-item mt-3\">\n                <MDBCardHeader\n                  className=\"accordion-header d-flex justify-content-between\"\n                  onClick={() =>\n                    showShow === `collapse${index}`\n                      ? setShowShow('collapse')\n                      : setShowShow(`collapse${index}`)\n                  }>\n                  {studytype}\n                  <MDBIcon\n                    icon={\n                      showShow === `collapse${index}`\n                        ? 'angle-up'\n                        : 'angle-down'\n                    }\n                  />\n                </MDBCardHeader>\n                <MDBCollapse show={showShow === `collapse${index}`}>\n                  <MDBCardBody className=\"accordion-body\">\n                    {studies[studytype].map((studypage: any) => (\n                      <>\n                        <a href={`${window.location.href}/${studypage.slug}`}>\n                          {studypage.study.studyName}\n                        </a>\n                      </>\n                    ))}\n                  </MDBCardBody>\n                </MDBCollapse>\n              </MDBCard>\n            </>\n          ))} */}\n        </div>\n      </MDBContainer>\n      <Footer copyrightText={'CC'} copyrightUrl={'mailto:admin@tuwien.club'} />\n    </>\n  )\n}\n\nStudyPage.PageType = 'StudyPage'\nStudyPage.ChildPages = []\n\nexport default StudyPage\n","import {\n  ConnectedPageType,\n  StreamField, //SimpleTextField as TextField,\n  SimpleRichTextField as RichTextField\n} from '@snek-at/jaen'\nimport {\n  // MDBIcon,\n  MDBContainer, // MDBCollapse,\n  // MDBCard,\n  // MDBCardBody,\n  // MDBCardHeader,\n  MDBNavbarLink,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem\n} from 'mdb-react-ui-kit'\nimport {useHistory} from 'react-router'\n\nimport {GroupsCardBlock} from '~/components/blocks'\n//import {useState} from 'react'\nimport {NavbarHeader, Footer} from '~/components/organisms'\n\nimport StudyPage from '../Study'\nimport './index.scss'\n\nconst GroupsPage: ConnectedPageType = () => {\n  //const [showShow, setShowShow] = useState('collapse0')\n  // const studies = pageContent.studies.reduce((s: any, t: any) => {\n  //   s[t.study.studyType] = [...(s[t.study.studyType] || []), t]\n  //   return s\n  // }, {})\n  const history = useHistory()\n  const linkHandler = (\n    path: string /*position: string, offset: number*/\n  ): void => {\n    history.push(path)\n  }\n\n  return (\n    <>\n      <NavbarHeader />\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <MDBContainer fluid>\n          <MDBBreadcrumb>\n            <MDBBreadcrumbItem active>\n              <MDBNavbarLink\n                aria-current=\"page\"\n                onClick={() => linkHandler('/groups')}>\n                groups\n              </MDBNavbarLink>\n            </MDBBreadcrumbItem>\n          </MDBBreadcrumb>\n        </MDBContainer>\n      </nav>\n      <MDBContainer className=\"pt-5\">\n        <RichTextField name={'groupsosubheading'} />\n      </MDBContainer>\n      <MDBContainer>\n        <div className=\"accordion\">\n          <StreamField\n            reverseOrder={false}\n            name={'groupscards1'}\n            blocks={[GroupsCardBlock]}\n          />\n          {/* {Object.keys(studies).map((studytype: any, index: number) => (\n            <>\n              <MDBCard className=\"accordion-item mt-3\">\n                <MDBCardHeader\n                  className=\"accordion-header d-flex justify-content-between\"\n                  onClick={() =>\n                    showShow === `collapse${index}`\n                      ? setShowShow('collapse')\n                      : setShowShow(`collapse${index}`)\n                  }>\n                  {studytype}\n                  <MDBIcon\n                    icon={\n                      showShow === `collapse${index}`\n                        ? 'angle-up'\n                        : 'angle-down'\n                    }\n                  />\n                </MDBCardHeader>\n                <MDBCollapse show={showShow === `collapse${index}`}>\n                  <MDBCardBody className=\"accordion-body\">\n                    {studies[studytype].map((studypage: any) => (\n                      <>\n                        <a href={`${window.location.href}/${studypage.slug}`}>\n                          {studypage.study.studyName}\n                        </a>\n                      </>\n                    ))}\n                  </MDBCardBody>\n                </MDBCollapse>\n              </MDBCard>\n            </>\n          ))} */}\n        </div>\n      </MDBContainer>\n      <Footer copyrightText={'CC'} copyrightUrl={'mailto:admin@tuwien.club'} />\n    </>\n  )\n}\n\nGroupsPage.PageType = 'GroupsPage'\nGroupsPage.ChildPages = [StudyPage]\n\nexport default GroupsPage\n","import {\n  ConnectedPageType,\n  SimpleTextField as TextField,\n  SimpleRichTextField as RichTextField\n} from '@snek-at/jaen'\nimport {MDBContainer} from 'mdb-react-ui-kit'\n\nimport {NavbarHeader, Footer} from '~/components/organisms'\n\nimport './index.scss'\n\nconst HowtoPage: ConnectedPageType = () => {\n  return (\n    <>\n      <NavbarHeader />\n      <MDBContainer className=\"pt-5\">\n        <h1>\n          <TextField name={'howtoheading'} />\n        </h1>\n        <div>\n          <RichTextField name={'howtosubheading'} />\n        </div>\n      </MDBContainer>\n      <Footer copyrightText={'CC'} copyrightUrl={'mailto:admin@tuwien.club'} />\n    </>\n  )\n}\n\nHowtoPage.PageType = 'HowtoPage'\nHowtoPage.ChildPages = []\n\nexport default HowtoPage\n","import {\n  ConnectedPageType,\n  SimpleTextField as TextField,\n  SimpleRichTextField as RichTextField\n} from '@snek-at/jaen'\nimport {MDBContainer} from 'mdb-react-ui-kit'\n\nimport {NavbarHeader, Footer} from '~/components/organisms'\n\nimport './index.scss'\n\nconst RulesPage: ConnectedPageType = () => {\n  return (\n    <>\n      <NavbarHeader />\n\n      <MDBContainer className=\"pt-5\">\n        <h1>\n          <TextField name={'rulesheading'} />\n        </h1>\n        <div>\n          <RichTextField name={'rulessubheading'} />\n        </div>\n      </MDBContainer>\n\n      <Footer copyrightText={'CC'} copyrightUrl={'mailto:admin@tuwien.club'} />\n    </>\n  )\n}\n\nRulesPage.PageType = 'RulesPage'\nRulesPage.ChildPages = []\n\nexport default RulesPage\n","import {\n  ConnectedPageType,\n  SimpleTextField as TextField,\n  SimpleRichTextField as RichTextField\n} from '@snek-at/jaen'\nimport {MDBContainer} from 'mdb-react-ui-kit'\n\nimport {NavbarHeader, Footer} from '~/components/organisms'\n\nimport ContactPage from '../Contact'\nimport FaqPage from '../Faq'\nimport GroupsPage from '../Groups'\nimport HowtoPage from '../Howto'\nimport RulesPage from '../Rules'\n//import {ContactPage, FaqPage, GroupsPage, HowtoPage, RulesPage, StudyPage} from '..'\nimport './index.scss'\n\nconst HomePage: ConnectedPageType = () => {\n  return (\n    <>\n      <NavbarHeader />\n      <MDBContainer className=\"pt-5\">\n        <h1 className=\"cms-center mt-5\">\n          <TextField name={'homeheading'} />\n        </h1>\n        <div className=\"cms-center mt-5\">\n          <RichTextField name={'homesubheading'} />\n        </div>\n      </MDBContainer>\n      <Footer copyrightText={'CC'} copyrightUrl={'mailto:admin@tuwien.club'} />\n    </>\n  )\n}\n\nHomePage.PageType = 'HomePage'\nHomePage.ChildPages = [ContactPage, FaqPage, GroupsPage, HowtoPage, RulesPage]\n\nexport default HomePage\n","/**\n * @license\n *\n * SPDX-FileCopyrightText: Copyright © 2021 snek.at\n * SPDX-License-Identifier: EUPL-1.2\n *\n * Use of this source code is governed by an EUPL-1.2 license that can be found\n * in the LICENSE file at https://snek.at/license\n */\nimport {CMSProvider} from '@snek-at/jaen'\n\nimport '~/common/css/base.scss'\n\nimport {\n  ContactPage,\n  FaqPage,\n  GroupsPage,\n  HomePage,\n  HowtoPage,\n  RulesPage,\n  StudyPage\n} from './tuwien_club/pages'\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <CMSProvider\n        settings={{gitRemote: process.env.REACT_APP_JAEN_GIT_REMOTE}}\n        pages={[\n          ContactPage,\n          FaqPage,\n          GroupsPage,\n          HomePage,\n          HowtoPage,\n          RulesPage,\n          StudyPage\n        ]}></CMSProvider>\n    </div>\n  )\n}\n\nexport default App\n","/**\n * @license\n *\n * SPDX-FileCopyrightText: Copyright © 2021 snek.at\n * SPDX-License-Identifier: EUPL-1.2\n *\n * Use of this source code is governed by an EUPL-1.2 license that can be found\n * in the LICENSE file at https://snek.at/license\n */\nimport {createAction} from '@reduxjs/toolkit'\n\nexport const increase = createAction('counter/increase')\nexport const decrease = createAction('counter/decrease')\n","/**\n * @license\n *\n * SPDX-FileCopyrightText: Copyright © 2021 snek.at\n * SPDX-License-Identifier: EUPL-1.2\n *\n * Use of this source code is governed by an EUPL-1.2 license that can be found\n * in the LICENSE file at https://snek.at/license\n */\nimport {createReducer} from '@reduxjs/toolkit'\n\nimport {decrease, increase} from '../actions/counter'\nimport {CounterSate} from '../types'\n\nconst initialState: CounterSate = {\n  counter: 0\n}\n\nconst counterReducer = createReducer(initialState, {\n  [increase.type]: (state, _action) => {\n    state.counter += 1\n  },\n  [decrease.type]: (state, _action) => {\n    state.counter -= 1\n  }\n})\n\nexport default counterReducer\n","/**\n * @license\n *\n * SPDX-FileCopyrightText: Copyright © 2021 snek.at\n * SPDX-License-Identifier: EUPL-1.2\n *\n * Use of this source code is governed by an EUPL-1.2 license that can be found\n * in the LICENSE file at https://snek.at/license\n */\nimport {combineReducers, configureStore} from '@reduxjs/toolkit'\n\nimport {counterReducer} from './reducers'\n\nconst rootReducer = combineReducers({\n  counter: counterReducer\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      thunk: {extraArgument: {}}\n    }).concat([]),\n  devTools: process.env.NODE_ENV !== 'production'\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {counter: CounterState}\nexport type AppDispatch = typeof store.dispatch\n","/**\n * @license\n *\n * SPDX-FileCopyrightText: Copyright © 2021 snek.at\n * SPDX-License-Identifier: EUPL-1.2\n *\n * Use of this source code is governed by an EUPL-1.2 license that can be found\n * in the LICENSE file at https://snek.at/license\n */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\n\nimport App from './App'\nimport {store} from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n)\n"],"sourceRoot":""}