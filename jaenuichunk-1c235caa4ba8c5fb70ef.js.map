{"version":3,"file":"jaenuichunk-1c235caa4ba8c5fb70ef.js","mappings":"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","sources":["webpack://tuwien-club-front/./node_modules/@snek-at/jaen/index.js","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/src/containers/ui/hotbar/DiscardButton.tsx","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/src/containers/ui/hotbar/EditButton.tsx","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/src/containers/ui/hotbar/PublishButton.tsx","webpack://tuwien-club-front/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/src/containers/ui/tabs/FilesTab.tsx","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/rng.js","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/regex.js","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/stringify.js","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/validate.js","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/v4.js","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/src/containers/ui/tabs/PagesTab.tsx","webpack://tuwien-club-front/./node_modules/@snek-at/jaen-pages/src/containers/ui/tabs/SettingsTab.tsx"],"sourcesContent":["module.exports = require('./src/index');","import {DiscardButton} from '@snek-at/jaen-shared-ui/dist/components/molecules/buttons'\nimport * as actions from '@store/actions/siteActions'\nimport {useAppDispatch, useAppSelector} from '@store/index'\nimport {withRedux} from '@store/withRedux'\nimport React from 'react'\n\nconst Button: React.FC = () => {\n  const dispatch = useAppDispatch()\n\n  // const site = useAppSelector(state => state.site)\n\n  const handleDiscard = () => {\n    dispatch(actions.discardSiteChanges())\n  }\n\n  return <DiscardButton onDiscardClick={handleDiscard} />\n}\n\nexport default withRedux(Button)\n","import {EditButton} from '@snek-at/jaen-shared-ui/dist/components/molecules/buttons'\nimport * as actions from '@store/actions/optionsActions'\nimport {useAppDispatch, useAppSelector} from '@store/index'\nimport {withRedux} from '@store/withRedux'\nimport React from 'react'\n\nconst Button: React.FC = () => {\n  const dispatch = useAppDispatch()\n\n  const isEditing = useAppSelector(state => state.options.isEditing)\n\n  const handleEditChange = (edtiting: boolean) => {\n    dispatch(actions.setEditing(edtiting))\n  }\n\n  return <EditButton isEditing={isEditing} onEditChange={handleEditChange} />\n}\n\nexport default withRedux(Button)\n","import {useToast} from '@chakra-ui/react'\nimport {BifrostBridge} from '@snek-at/bridge'\nimport {useJaenCoreContext} from '@snek-at/jaen'\nimport {PublishButton} from '@snek-at/jaen-shared-ui/dist/components/molecules/buttons'\nimport {withRedux} from '@store/withRedux'\nimport gql from 'graphql-tag'\nimport React from 'react'\n\nconst Bridge = new BifrostBridge({\n  httpUrl: 'https://origin.snek.at/graphql'\n})\n\nconst Button: React.FC = () => {\n  const core = useJaenCoreContext()\n  const toast = useToast()\n\n  const isDisabled = core.getAuthState().isGuest\n\n  const publish = async () => {\n    const {upload} = await import('@src/ipfs')\n    const res = (await core.onPublish()) as {'jaen-pages': object}\n\n    const url = await upload(JSON.stringify(res['jaen-pages']))\n\n    const publishRes = await Bridge.session.mutate<{\n      jaenPublishFormPage: {result: string}\n    }>(\n      gql`\n        mutation JaenPublishMutation($values: GenericScalar!, $url: String!) {\n          jaenPublishFormPage(values: $values, url: $url) {\n            result\n            errors {\n              name\n              errors\n            }\n          }\n        }\n      `,\n      {\n        url: '/jaen-publish',\n        values: {git_remote: core.remote, jaendata_url: url}\n      }\n    )\n\n    if (publishRes.data?.jaenPublishFormPage?.result === 'OK') {\n      toast({\n        title: 'Sucessfully published.',\n        status: 'success',\n        duration: 9000,\n        isClosable: true\n      })\n    } else {\n      toast({\n        title: 'Publish failed.',\n        status: 'error',\n        duration: 9000,\n        isClosable: true\n      })\n    }\n  }\n\n  return (\n    <PublishButton disabled={isDisabled} onPublishClick={() => publish()} />\n  )\n}\n\nexport default withRedux(Button)\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import loadable from '@loadable/component'\nimport {withRedux} from '@store/withRedux'\nimport * as React from 'react'\n\nconst SnekFinder = loadable(() => import('@containers/SnekFinder'))\n\nconst FilesTab: React.FC<{}> = () => {\n  return <SnekFinder />\n}\n\nexport default withRedux(FilesTab)\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import {Button, useDisclosure} from '@chakra-ui/react'\nimport {usePages, useCMSContext} from '@contexts/cms'\nimport loadable from '@loadable/component'\nimport {useLocation} from '@reach/router'\nimport {PageExplorer, PageExplorerProps} from '@snek-at/jaen-shared-ui'\nimport {PageType} from '@src/types'\nimport {resolveDynamicPath} from '@src/utils'\nimport * as actions from '@store/actions/siteActions'\nimport {useAppDispatch, useAppSelector} from '@store/index'\nimport {withRedux} from '@store/withRedux'\nimport {navigate} from 'gatsby'\nimport * as React from 'react'\nimport {v4 as uuidv4} from 'uuid'\n\nconst SnekFinder = loadable(() => import('@containers/SnekFinder'))\n\nconst transformToItems = (pages: {\n  [id: string]: PageType\n}): PageExplorerProps['items'] =>\n  Object.fromEntries(\n    Object.entries(pages).map(([id, page]) => {\n      const {\n        title,\n        slug,\n        parent,\n        children,\n        template,\n        pageMetadata,\n        deleted\n      } = page\n\n      return [\n        id,\n        {\n          data: {\n            slug: slug || page?.path?.split('/')[1],\n            title: pageMetadata?.title || (title as string),\n            description: pageMetadata?.description || '',\n            image: pageMetadata?.image || '',\n            isBlogPost: pageMetadata?.isBlogPost || false,\n            lastPublished: pageMetadata?.datePublished,\n            templateName: template,\n            locked: !template\n          },\n          children: children.map(({id}) => id),\n          parent: parent ? parent.id : null,\n          deleted\n        }\n      ]\n    })\n  )\n\nconst PagesTab: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n\n  const cmsContext = useCMSContext()\n  const allSitePage = usePages()\n  const fileSelector = useDisclosure()\n\n  const dynamicPaths = useAppSelector(state => state.site.routing.dynamicPaths)\n  const [currentPath, setCurrentPath] = React.useState(window.location.pathname)\n\n  const defaultSelection = React.useMemo(() => {\n    // find the node that matches the current path\n    const dynamicId = currentPath && dynamicPaths[currentPath]\n\n    if (!dynamicId) {\n      for (const [id, node] of Object.entries(allSitePage.nodes)) {\n        if (node.path === currentPath) {\n          return id\n        }\n      }\n    }\n\n    return dynamicId\n  }, [allSitePage.nodes, currentPath, dynamicPaths]) as string\n\n  const templates = React.useMemo(\n    () => cmsContext.templates.map(e => e.TemplateName),\n    [cmsContext.templates]\n  )\n\n  const [fileSelectorPageId, setFileSelectorPageId] = React.useState<\n    string | null\n  >(null)\n\n  const [nextRoutingUpdate, setNextRoutingUpdate] = React.useState<\n    string | null\n  >(null)\n\n  React.useEffect(() => {\n    if (nextRoutingUpdate) {\n      const dynamicPaths = resolveDynamicPath(nextRoutingUpdate, allSitePage)\n\n      dispatch(actions.updateSiteRouting({dynamicPaths}))\n\n      setNextRoutingUpdate(null)\n    }\n  }, [allSitePage])\n\n  const updateRouting = (id: string) => {\n    setNextRoutingUpdate(id)\n  }\n\n  const handlePageCreate = (\n    parentId: string | null,\n    title: string,\n    slug: string,\n    template: string\n  ) => {\n    const pageId = `SitePage /${uuidv4()}`\n    dispatch(\n      actions.addPage({\n        pageId,\n        page: {\n          slug,\n          template,\n          parent: parentId ? {id: parentId} : null,\n          children: [],\n          fields: {},\n          pageMetadata: {\n            title,\n            description: '',\n            image: '',\n            canonical: '',\n            isBlogPost: false\n          }\n        },\n        nodes: allSitePage.nodes\n      })\n    )\n\n    updateRouting(pageId)\n  }\n  const handlePageUpdate = (\n    id: string,\n    values: Partial<{\n      title: string\n      slug: string\n      description: string\n      image: string\n      isBlogPost: boolean\n      lastPublished?: string | undefined\n    }>\n  ) => {\n    const meta = allSitePage.nodes[id].pageMetadata\n    dispatch(\n      actions.updatePage({\n        pageId: id,\n        slug: values.slug,\n        meta: {\n          title: values.title || meta?.title,\n          description: values.description || meta?.description,\n          image: values.image || meta?.image,\n          isBlogPost: values.isBlogPost || meta?.isBlogPost,\n          datePublished: values.lastPublished || meta?.datePublished\n        }\n      })\n    )\n    updateRouting(id)\n    handleNavigate(id)\n  }\n  const handlePageDelete = (id: string) => {\n    handleNavigate(null)\n\n    dispatch(actions.deletePage(id))\n    updateRouting(id)\n  }\n  const handlePageMove = (sourceId: string, destinationId: string | null) => {\n    dispatch(\n      actions.movePage({\n        sourceId,\n        destinationId,\n        nodes: allSitePage.nodes\n      })\n    )\n\n    updateRouting(sourceId)\n    handleNavigate(sourceId)\n  }\n\n  const handleItemImageClick = (pageId: string) => {\n    setFileSelectorPageId(pageId)\n\n    fileSelector.onOpen()\n  }\n\n  const handleNavigate = (pageId: string | null) => {\n    let pagePath\n    const nodes = allSitePage.nodes\n    if (pageId) {\n      pagePath = Object.keys(dynamicPaths).find(\n        key => dynamicPaths[key] === pageId\n      )\n\n      if (!pagePath) {\n        pagePath = nodes[pageId].path\n      }\n    }\n\n    const newPagePath = pagePath || '/'\n\n    setCurrentPath(newPagePath)\n    navigate(newPagePath)\n  }\n\n  // TODO: move to a loading state in order to improve performence\n  const items = React.useMemo(() => transformToItems(allSitePage.nodes), [\n    allSitePage.nodes\n  ])\n\n  return (\n    <>\n      <PageExplorer\n        items={items}\n        rootItemIds={allSitePage.rootNodeIds}\n        defaultSelection={defaultSelection}\n        templates={templates}\n        onItemCreate={handlePageCreate}\n        onItemDelete={handlePageDelete}\n        onItemUpdate={handlePageUpdate}\n        onItemMove={handlePageMove}\n        onItemSelect={handleNavigate}\n        onItemImageClick={handleItemImageClick}\n      />\n      {fileSelector.isOpen && (\n        <SnekFinder\n          mode=\"selector\"\n          onSelectorClose={fileSelector.onClose}\n          onSelectorSelect={i => {\n            if (fileSelectorPageId) {\n              handlePageUpdate(fileSelectorPageId, {image: i.src})\n            }\n            setFileSelectorPageId(null)\n            fileSelector.onClose()\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default withRedux(PagesTab)\n","import {useDisclosure} from '@chakra-ui/hooks'\nimport {useSiteMetadata} from '@contexts/cms'\nimport loadable from '@loadable/component'\nimport {Settings} from '@snek-at/jaen-shared-ui'\nimport * as actions from '@store/actions/siteActions'\nimport {useAppDispatch} from '@store/index'\nimport {withRedux} from '@store/withRedux'\nimport * as React from 'react'\n\nconst SnekFinder = loadable(() => import('@containers/SnekFinder'))\n\nconst SettingsTab: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n\n  const fileSelector = useDisclosure()\n\n  const siteMetadata = useSiteMetadata()\n\n  const handleValuesChange = (values: any) => {\n    dispatch(actions.updateSiteMeta({meta: values}))\n  }\n\n  const handleImageClick = () => {\n    fileSelector.onOpen()\n  }\n\n  return (\n    <>\n      <Settings\n        values={siteMetadata as any}\n        onValuesChange={handleValuesChange}\n        onImageClick={handleImageClick}\n      />\n      {fileSelector.isOpen && (\n        <SnekFinder\n          mode=\"selector\"\n          onSelectorClose={fileSelector.onClose}\n          onSelectorSelect={i => {\n            handleValuesChange({...siteMetadata, image: i.src})\n\n            fileSelector.onClose()\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default withRedux(SettingsTab)\n"],"names":["module","exports","withRedux","dispatch","useAppDispatch","DiscardButton","onDiscardClick","actions","isEditing","useAppSelector","state","options","EditButton","onEditChange","edtiting","Bridge","BifrostBridge","httpUrl","core","useJaenCoreContext","toast","useToast","isDisabled","getAuthState","isGuest","publish","upload","onPublish","res","JSON","stringify","url","session","mutate","gql","strings","raw","slice","values","git_remote","remote","jaendata_url","publishRes","data","jaenPublishFormPage","result","title","status","duration","isClosable","PublishButton","disabled","onPublishClick","SnekFinder","loadable","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","buf","rnds","random","cmsContext","useCMSContext","allSitePage","usePages","fileSelector","useDisclosure","dynamicPaths","site","routing","React","window","location","pathname","currentPath","setCurrentPath","defaultSelection","dynamicId","Object","entries","nodes","id","path","templates","map","e","TemplateName","fileSelectorPageId","setFileSelectorPageId","nextRoutingUpdate","setNextRoutingUpdate","resolveDynamicPath","updateRouting","handlePageUpdate","meta","pageMetadata","pageId","slug","description","image","isBlogPost","datePublished","lastPublished","handleNavigate","pagePath","keys","find","key","newPagePath","navigate","items","pages","fromEntries","page","parent","children","template","deleted","split","templateName","locked","PageExplorer","rootItemIds","rootNodeIds","onItemCreate","parentId","uuidv4","fields","canonical","onItemDelete","onItemUpdate","onItemMove","sourceId","destinationId","onItemSelect","onItemImageClick","onOpen","isOpen","mode","onSelectorClose","onClose","onSelectorSelect","src","siteMetadata","useSiteMetadata","handleValuesChange","Settings","onValuesChange","onImageClick"],"sourceRoot":""}